name: 'CI'
on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize
      - edited
  workflow_call:

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: 'Install Go'
        if: success()
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.x
      - name: 'Checkout code'
        uses: actions/checkout@v2
      - name: 'Cache go modules'
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Init submodules
        run: git submodule update --init
      #Core module
      - name: 'Run linters core module'
        uses: golangci/golangci-lint-action@v3
        with:
          working-directory: 'core'
          version: v1.45
          args: --timeout 5m
      - name: 'Run unit tests core module'
        run: go test -v ./core/...
      #Model module
      - name: 'Run linters model module'
        uses: golangci/golangci-lint-action@v3
        with:
          working-directory: 'model'
          version: v1.45
          args: --timeout 5m
      - name: 'Run unit tests model module'
        run: go test -v ./model/...
      #Contentadrstorage module
      - name: 'Run linters contentadrstorage module'
        uses: golangci/golangci-lint-action@v3
        with:
          working-directory: 'contentadrstorage'
          version: v1.45
          args: --timeout 5m
      - name: 'Run unit tests contentadrstorage module'
        run: go test -v ./contentadrstorage/...
      #Contract module
      - name: 'Run linters contract module'
        uses: golangci/golangci-lint-action@v3
        with:
          working-directory: 'contract'
          version: v1.45
          args: --timeout 5m
      - name: 'Run unit tests contract module'
        run: go test -v ./contract/...